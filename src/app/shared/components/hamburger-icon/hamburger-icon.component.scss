// inspired by https://jonsuh.com/hamburgers/ and made configurable via css properties

@use 'src/styles/common' as c;

:host {
  display: block;
  width: var(--layer-width);
  height: calc(var(--layer-height) * 3 + var(--layer-spacing) * 2);
  position: relative;
}

:host(.active) {
  .layer {
    --y-offset: calc(var(--layer-spacing) + var(--layer-height));

    transform: translate3d(0, var(--y-offset), 0) rotate(135deg);
    transition-delay: 0.075s;

    &::before {
      transition-delay: 0s;
      opacity: 0;
    }

    &::after {
      --y-offset-after: calc(var(--y-offset) * -2);

      transform: translate3d(0, var(--y-offset-after), 0) rotate(-270deg);
      transition-delay: 0.075s;
    }
  }
}

.layer {
  display: block;
  margin-top: calc(var(--layer-height) / -2);
  top: calc(var(--layer-height) / 2);
  transition-duration: 0.275s;
  transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);

  &,
  &::before,
  &::after {
    width: var(--layer-width);
    height: var(--layer-height);
    background-color: currentColor;
    border-radius: var(--layer-border-radius);
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: "";
    display: block;
  }

  &::before {
    top: calc(var(--layer-height) + var(--layer-spacing));
    transition: opacity 0.125s 0.275s ease;
  }

  &::after {
    top: calc((var(--layer-height) * 2) + (var(--layer-spacing) * 2));
    transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
}
